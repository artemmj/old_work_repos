# Generated by Django 5.0.4 on 2024-08-02 11:55

import apps.document.models.inn.validators
import apps.document.models.snils.validators
import dirtyfields.dirtyfields
import django.core.validators
import django.db.models.deletion
import simple_history.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('file', '0002_image'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalInn',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='Создан')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='Обновлен')),
                ('deleted_at', models.DateTimeField(blank=True, db_index=True, editable=False, null=True, verbose_name='Удален')),
                ('value', models.CharField(db_index=True, max_length=12, validators=[apps.document.models.inn.validators.InnValidator()], verbose_name='Значение')),
                ('verification_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата проверки на самозанятого')),
                ('is_self_employed', models.BooleanField(blank=True, null=True, verbose_name='Является самозанятым или нет')),
                ('is_manual_verification_required', models.BooleanField(default=False, verbose_name='Требуется ручная проверка или нет')),
                ('status', models.CharField(choices=[('new', 'Новый'), ('approval', 'Проверка'), ('accept', 'Подтвержден'), ('decline', 'Отклонен'), ('blocked', 'Заблокирован')], default='new', max_length=8, verbose_name='Статус')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('file', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='file.file', verbose_name='ИНН')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical ИНН',
                'verbose_name_plural': 'historical ИНН',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalPassport',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='Создан')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='Обновлен')),
                ('deleted_at', models.DateTimeField(blank=True, db_index=True, editable=False, null=True, verbose_name='Удален')),
                ('gender', models.CharField(blank=True, choices=[('male', 'Мужской'), ('female', 'Женский')], max_length=6, null=True, verbose_name='Пол')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('place_of_birth', models.TextField(blank=True, null=True, verbose_name='Место рождения')),
                ('citizenship', models.CharField(blank=True, max_length=40, null=True, verbose_name='Гражданство')),
                ('number', models.CharField(blank=True, db_index=True, max_length=6, null=True, validators=[django.core.validators.RegexValidator(message='Номер должен состоять из 6 цифр', regex='^[0-9]{6}$')], verbose_name='Номер')),
                ('series', models.CharField(blank=True, max_length=4, null=True, validators=[django.core.validators.RegexValidator(message='Серия должна состоять из 4 цифр', regex='^[0-9]{4}$')], verbose_name='Серия')),
                ('department_code', models.CharField(blank=True, max_length=6, null=True, validators=[django.core.validators.RegexValidator(message='Код подразделения должен состоять из 6 цифр', regex='^[0-9]{6}$')], verbose_name='Код подразделения')),
                ('date_issue', models.DateField(blank=True, null=True, verbose_name='Дата выдачи')),
                ('issued_by', models.TextField(blank=True, null=True, verbose_name='Кем выдан')),
                ('registration_address', models.TextField(blank=True, null=True, verbose_name='Адрес регистрации')),
                ('status', models.CharField(choices=[('new', 'Новый'), ('approval', 'Проверка'), ('accept', 'Подтвержден'), ('decline', 'Отклонен'), ('blocked', 'Заблокирован')], default='new', max_length=8, verbose_name='Статус')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('file', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='file.file', verbose_name='Паспорт')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Паспорт',
                'verbose_name_plural': 'historical Паспорта',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalRegistration',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='Создан')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='Обновлен')),
                ('deleted_at', models.DateTimeField(blank=True, db_index=True, editable=False, null=True, verbose_name='Удален')),
                ('status', models.CharField(choices=[('new', 'Новый'), ('approval', 'Проверка'), ('accept', 'Подтвержден'), ('decline', 'Отклонен'), ('blocked', 'Заблокирован')], default='new', max_length=8, verbose_name='Статус')),
                ('registration_address', models.TextField(blank=True, null=True, verbose_name='Адрес регистрации')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical страница с регистрацией',
                'verbose_name_plural': 'historical страницы с регистрацией',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalSelfie',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='Создан')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='Обновлен')),
                ('deleted_at', models.DateTimeField(blank=True, db_index=True, editable=False, null=True, verbose_name='Удален')),
                ('status', models.CharField(choices=[('new', 'Новый'), ('approval', 'Проверка'), ('accept', 'Подтвержден'), ('decline', 'Отклонен'), ('blocked', 'Заблокирован')], default='new', max_length=8, verbose_name='Статус')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('file', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='file.file', verbose_name='файл селфи')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical селфи с паспортом.',
                'verbose_name_plural': 'historical селфи с паспортом.',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalSnils',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='Создан')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='Обновлен')),
                ('deleted_at', models.DateTimeField(blank=True, db_index=True, editable=False, null=True, verbose_name='Удален')),
                ('value', models.TextField(db_index=True, validators=[apps.document.models.snils.validators.SNILS_VALIDATORS], verbose_name='Значение')),
                ('status', models.CharField(choices=[('new', 'Новый'), ('approval', 'Проверка'), ('accept', 'Подтвержден'), ('decline', 'Отклонен'), ('blocked', 'Заблокирован')], default='new', max_length=8, verbose_name='Статус')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('file', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='file.file', verbose_name='Снилс')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical СНИЛС',
                'verbose_name_plural': 'historical СНИЛС',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Inn',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлен')),
                ('deleted_at', models.DateTimeField(blank=True, db_index=True, editable=False, null=True, verbose_name='Удален')),
                ('value', models.CharField(max_length=12, unique=True, validators=[apps.document.models.inn.validators.InnValidator()], verbose_name='Значение')),
                ('verification_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата проверки на самозанятого')),
                ('is_self_employed', models.BooleanField(blank=True, null=True, verbose_name='Является самозанятым или нет')),
                ('is_manual_verification_required', models.BooleanField(default=False, verbose_name='Требуется ручная проверка или нет')),
                ('status', models.CharField(choices=[('new', 'Новый'), ('approval', 'Проверка'), ('accept', 'Подтвержден'), ('decline', 'Отклонен'), ('blocked', 'Заблокирован')], default='new', max_length=8, verbose_name='Статус')),
                ('file', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='inn_documents', to='file.file', verbose_name='ИНН')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='inn', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'ИНН',
                'verbose_name_plural': 'ИНН',
            },
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Passport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлен')),
                ('deleted_at', models.DateTimeField(blank=True, db_index=True, editable=False, null=True, verbose_name='Удален')),
                ('gender', models.CharField(blank=True, choices=[('male', 'Мужской'), ('female', 'Женский')], max_length=6, null=True, verbose_name='Пол')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('place_of_birth', models.TextField(blank=True, null=True, verbose_name='Место рождения')),
                ('citizenship', models.CharField(blank=True, max_length=40, null=True, verbose_name='Гражданство')),
                ('number', models.CharField(blank=True, max_length=6, null=True, unique=True, validators=[django.core.validators.RegexValidator(message='Номер должен состоять из 6 цифр', regex='^[0-9]{6}$')], verbose_name='Номер')),
                ('series', models.CharField(blank=True, max_length=4, null=True, validators=[django.core.validators.RegexValidator(message='Серия должна состоять из 4 цифр', regex='^[0-9]{4}$')], verbose_name='Серия')),
                ('department_code', models.CharField(blank=True, max_length=6, null=True, validators=[django.core.validators.RegexValidator(message='Код подразделения должен состоять из 6 цифр', regex='^[0-9]{6}$')], verbose_name='Код подразделения')),
                ('date_issue', models.DateField(blank=True, null=True, verbose_name='Дата выдачи')),
                ('issued_by', models.TextField(blank=True, null=True, verbose_name='Кем выдан')),
                ('registration_address', models.TextField(blank=True, null=True, verbose_name='Адрес регистрации')),
                ('status', models.CharField(choices=[('new', 'Новый'), ('approval', 'Проверка'), ('accept', 'Подтвержден'), ('decline', 'Отклонен'), ('blocked', 'Заблокирован')], default='new', max_length=8, verbose_name='Статус')),
                ('file', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='passport_documents', to='file.file', verbose_name='Паспорт')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='passport', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Паспорт',
                'verbose_name_plural': 'Паспорта',
            },
        ),
        migrations.CreateModel(
            name='Registration',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлен')),
                ('deleted_at', models.DateTimeField(blank=True, db_index=True, editable=False, null=True, verbose_name='Удален')),
                ('status', models.CharField(choices=[('new', 'Новый'), ('approval', 'Проверка'), ('accept', 'Подтвержден'), ('decline', 'Отклонен'), ('blocked', 'Заблокирован')], default='new', max_length=8, verbose_name='Статус')),
                ('registration_address', models.TextField(blank=True, null=True, verbose_name='Адрес регистрации')),
                ('file', models.ManyToManyField(blank=True, related_name='registration_documents', to='file.file', verbose_name='Страницы с регистрацией')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='registration', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'страница с регистрацией',
                'verbose_name_plural': 'страницы с регистрацией',
            },
        ),
        migrations.CreateModel(
            name='Selfie',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлен')),
                ('deleted_at', models.DateTimeField(blank=True, db_index=True, editable=False, null=True, verbose_name='Удален')),
                ('status', models.CharField(choices=[('new', 'Новый'), ('approval', 'Проверка'), ('accept', 'Подтвержден'), ('decline', 'Отклонен'), ('blocked', 'Заблокирован')], default='new', max_length=8, verbose_name='Статус')),
                ('file', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='selfie_documents', to='file.file', verbose_name='файл селфи')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='selfie', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'селфи с паспортом.',
                'verbose_name_plural': 'селфи с паспортом.',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='SelfieRecognition',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлен')),
                ('deleted_at', models.DateTimeField(blank=True, db_index=True, editable=False, null=True, verbose_name='Удален')),
                ('recognition_result', models.JSONField(blank=True, default=dict)),
                ('status', models.CharField(blank=True, choices=[('recognition_succeeded', 'Успешная автоматическая проверка'), ('recognition_failed', 'Ошибка автоматическай проверки')], max_length=21, null=True, verbose_name='статус селфи')),
                ('passport', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='selfie_recognitions', to='document.passport', verbose_name='паспорт')),
                ('selfie', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='recognitions', to='document.selfie', verbose_name='документ')),
            ],
            options={
                'verbose_name': 'результат проверки селфи',
                'verbose_name_plural': 'результаты проверки селфи',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Snils',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлен')),
                ('deleted_at', models.DateTimeField(blank=True, db_index=True, editable=False, null=True, verbose_name='Удален')),
                ('value', models.TextField(unique=True, validators=[apps.document.models.snils.validators.SNILS_VALIDATORS], verbose_name='Значение')),
                ('status', models.CharField(choices=[('new', 'Новый'), ('approval', 'Проверка'), ('accept', 'Подтвержден'), ('decline', 'Отклонен'), ('blocked', 'Заблокирован')], default='new', max_length=8, verbose_name='Статус')),
                ('file', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='snils_documents', to='file.file', verbose_name='Снилс')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='snils', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'СНИЛС',
                'verbose_name_plural': 'СНИЛС',
            },
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
    ]
