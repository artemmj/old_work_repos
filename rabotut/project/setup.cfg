[isort]
line_length=120
skip=migrations
multi_line_output=3
include_trailing_comma = true


[flake8]
format = wemake
show-source = False
statistics = False
max-module-members = 8
max-local-variables = 7
max-imports = 15
nested-classes-whitelist = Meta, Params, Config
max-name-length = 50
max-line-length = 120
max-try-body-length = 3
ignore =
    B019,
    # не видит разницы между functools и methodtools
    F405,
    W503,
    I005,
    D100,
    D101,
    D102,
    # ругается на __magic__ методы
    D105,
    # pydocstyle ругается на каждый класс Meta
    D106,
    # докстринги в ините
    D107,
    D205,
    D400,
    N400,
    WPS111,
    WPS215,
    # overuse of string constants, --max-string-usages default 3
    WPS226,
    WPS300,
    WPS305,
    WPS306,
    WPS348,
    # ругается на __init__ всех апп из-за переменной пути к конфигу
    WPS412,
    # работа с диктами, не дает обрабатывать значение None
    WPS529,
    # Found using `@staticmethod`
    WPS602,
    # Found unpythonic getter or setter (значения по умолчанию)
    WPS615,
    # у нас не документируются (пока) параметры методов
    DAR101,
    # Missing "Returns" in Docstring
    DAR201,
    # у нас не документируются возможные ошибки методов
    DAR401,
    # у нас не документируются возвращаемое значение у методов
    DAR201,
    # у нас не документируются возвращаемое значение у генераторов
    DAR301,
    # не хочет, чтобы открыто хранили пароли
    S105,
    # использование random не в целях криптозащиты
    S311,
    # вам не хватает абстракций
    WPS204,
    # Found negated condition
    WPS504,
    # ограничения связанные с форматированием строк
    # Found implicit string concatenation
    WPS326,
    # Found string formatting
    WPS323,
    # Found a too complex f string
    WPS237,
    # Found underscored number name pattern
    WPS114,
    # Запрет на использования инструкции pass
    WPS420,
    # сложность строки
    WPS221,
    # соболев упоролся see https://wemake-python-styleguide.readthedocs.io/en/latest/pages/usage/violations/refactoring.html#wemake_python_styleguide.violations.refactoring.ImplicitYieldFromViolation
    WPS526,
    WPS360,
    WPS232,
    WPS407,
    WPS201,
    # много импортов
    WPS202
    # много методов

per-file-ignores =
    */models.py:WPS115
    */models/*:WPS115
    */managers.py:WPS115
    */managers/*:WPS115
    */choices.py:WPS115
    */statuses.py:WPS115
    */__init__.py:D104,F401,D103
    settings/*:WPS407
    urls.py:WPS201
    router.py:WPS201
    */current.py:WPS201
    conftest.py:WPS202,WPS442,WPS430,WPS432,D103,WPS211,WPS210
    fixtures.py:WPS202,WPS442,WPS430,WPS432,D103,WPS211,WPS210
    ext.py:WPS202
    gunicorn.conf.py:WPS102
    processors.py:WPS123
    ./api/v1/celery/serializers.py:WPS115,WPS326,WPS110
    ./apps/user/models/user.py:WPS201,WPS115,WPS433
    ./apps/user/tasks.py: D103
    ./apps/helpers/models.py: WPS202,D103,WPS115
    ./apps/helpers/serializers.py: WPS202
    ./apps/user/validators.py: D205,D400

exclude =
    .git,
    __pycache__,
    test*,
    migrations
    scratches
    scripts
    logs
    settings
    example*
    ./apps/helpers/exceptions.py
    ./apps/helpers/filters.py
    ./apps/helpers/models.py
    ./settings/inc_django/logging.py
    ./settings/inc_other/ckeditor.py
    ./apps/helpers/swagger/ext.py
    ./apps/helpers/swagger/inspectors.py
    ./apps/helpers/swagger/shemas.py


[tool:pytest]
python_files = tests.py test_*.py *_tests.py
xfail_strict=true

# py.test options:
norecursedirs = *.egg .eggs dist build docs .tox .git __pycache__ load_testing scripts

addopts =
; Django settings (https://pytest-django.readthedocs.io/en/latest/configuring_django.html#order-of-choosing-settings)
  --ds=settings.test
  --no-header
  --doctest-modules
  --reuse-db
  --fail-on-template-vars
  -l
  --ignore=gunicorn.conf.py
  --disable-pytest-warnings


[coverage:run]
omit =
    src/*
    settings/*
    */tests/*
    */models/*
    */migrations/*
    */factories/*
    **/fixtures.py
    **/conftest.py

[coverage:report]
exclude_also =
    def __repr__
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @(abc\.)?abstractmethod
