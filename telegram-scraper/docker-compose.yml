version: "3"
services:
  db:
    image: your-registry/templates/image/postgres:12-4-alpine
    container_name: telegram-scraper_db
    env_file: docker/.dockerenv
    restart: always
    volumes:
      - ./volumes/db/data:/var/lib/postgresql/data

  redis:
    image: your-registry/templates/image/redis:5-alpine
    container_name: telegram-scraper_redis
    env_file: docker/.dockerenv
    restart: always
    volumes:
      - ./volumes/redis/data:/data

  app:
    build:
      context: .
      dockerfile: docker/app/Dockerfile
    image: localhost/telegram-scraper
    container_name: telegram-scraper_app
    env_file: docker/.dockerenv
    restart: always
    volumes:
      - ./project:/app
      - ./volumes/media:/media
      - ./volumes/static:/static
    depends_on:
      - db
      - redis
    command: gunicorn --bind 0.0.0.0:8000 --timeout 600 --log-level debug --reload --workers 4 apps.wsgi:application

  celery:
    build:
      context: .
      dockerfile: docker/app/Dockerfile
    image: localhost/telegram-scraper
    container_name: telegram-scraper_celery
    env_file: docker/.dockerenv
    restart: always
    volumes:
      - ./project:/app
    depends_on:
      - db
      - redis
    command: celery worker -A apps -l info -B -c 4

  nginx:
    image: your-registry/templates/image/nginx:1-16-alpine
    container_name: telegram-scraper_nginx
    restart: always
    volumes:
      - ./docker/nginx/:/etc/nginx/conf.d
      - ./volumes/static:/var/www/static
      - ./volumes/media:/var/www/media
    depends_on:
      - app
    ports:
      - "80:80"
