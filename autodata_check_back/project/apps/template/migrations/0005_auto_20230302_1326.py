# Generated by Django 3.0.2 on 2023-03-02 10:26

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('template', '0004_auto_20230227_1114'),
    ]

    operations = [
        migrations.CreateModel(
            name='TemplateClient',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_enable', models.BooleanField(default=True, verbose_name='Вкл/Выкл')),
            ],
            options={
                'verbose_name': 'Настройка данных клиента',
                'verbose_name_plural': 'Настройки данных клиента',
            },
        ),
        migrations.CreateModel(
            name='TemplateCompleteness',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_enable', models.BooleanField(default=True, verbose_name='Вкл/Выкл')),
            ],
            options={
                'verbose_name': 'Настройка комплектности',
                'verbose_name_plural': 'Настройки комплектностей',
            },
        ),
        migrations.CreateModel(
            name='TemplateDamage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_enable', models.BooleanField(default=True, verbose_name='Вкл/Выкл')),
            ],
            options={
                'verbose_name': 'Настройка повреждений',
                'verbose_name_plural': 'Настройки повреждений',
            },
        ),
        migrations.CreateModel(
            name='TemplateDocumentsDetail',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('sts', models.BooleanField(default=True, verbose_name='СТС')),
                ('pts', models.BooleanField(default=True, verbose_name='ПТС')),
                ('additional', models.BooleanField(default=True, verbose_name='Дополнительные документы')),
            ],
            options={
                'verbose_name': 'Подробная настройка документов',
                'verbose_name_plural': 'Подробные настройки документов',
            },
        ),
        migrations.CreateModel(
            name='TemplateEquipmentDetail',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('visibility', models.BooleanField(default=True, verbose_name='Обзор')),
                ('exterior', models.BooleanField(default=True, verbose_name='Экстерьер')),
                ('protection', models.BooleanField(default=True, verbose_name='Защита от угона')),
                ('multimedia', models.BooleanField(default=True, verbose_name='Мультимедиа')),
                ('salon', models.BooleanField(default=True, verbose_name='Салон')),
                ('comfort', models.BooleanField(default=True, verbose_name='Комфорт')),
                ('safety', models.BooleanField(default=True, verbose_name='Безопасность')),
                ('other', models.BooleanField(default=True, verbose_name='Прочее')),
            ],
            options={
                'verbose_name': 'Подробная настройка комплектации',
                'verbose_name_plural': 'Подробные настройки комплектаций',
            },
        ),
        migrations.CreateModel(
            name='TemplateLift',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_enable', models.BooleanField(default=True, verbose_name='Вкл/Выкл')),
            ],
            options={
                'verbose_name': 'Настройка осмотра на подъемнике',
                'verbose_name_plural': 'Настройки осмотра на подъемнике',
            },
        ),
        migrations.CreateModel(
            name='TemplatePaintwork',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_enable', models.BooleanField(default=True, verbose_name='Вкл/Выкл')),
            ],
            options={
                'verbose_name': 'Настройка ЛКП',
                'verbose_name_plural': 'Настройки ЛКП',
            },
        ),
        migrations.CreateModel(
            name='TemplatePhotosDetail',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('front', models.BooleanField(default=True, verbose_name='Автомобиль в фас')),
                ('front_left_three_quarters', models.BooleanField(default=True, verbose_name='Автомобиль ¾ спереди слева')),
                ('front_left_wheel', models.BooleanField(default=True, verbose_name='Переднее левое колесо')),
                ('front_right_wheel', models.BooleanField(default=True, verbose_name='Переднее правое колесо')),
                ('front_right_three_quarters', models.BooleanField(default=True, verbose_name='Автомобиль ¾ спереди справа')),
                ('front_seats', models.BooleanField(default=True, verbose_name='Передний ряд сидений')),
                ('back', models.BooleanField(default=True, verbose_name='Автомобиль сзади')),
                ('back_left_wheel', models.BooleanField(default=True, verbose_name='Заднее левое колесо')),
                ('back_left_three_quarters', models.BooleanField(default=True, verbose_name='Автомобиль ¾ сзади слева')),
                ('back_right_three_quarters', models.BooleanField(default=True, verbose_name='Автомобиль ¾ сзади справа')),
                ('back_right_wheel', models.BooleanField(default=True, verbose_name='Заднее правое колесо')),
                ('back_seats', models.BooleanField(default=True, verbose_name='Задний ряд сидений')),
                ('left_side', models.BooleanField(default=True, verbose_name='Автомобиль сбоку слева')),
                ('right_side', models.BooleanField(default=True, verbose_name='Автомобиль сбоку справа')),
                ('open_trunk', models.BooleanField(default=True, verbose_name='Открытый багажник')),
                ('steering', models.BooleanField(default=True, verbose_name='Руль крупно')),
                ('torpedo', models.BooleanField(default=True, verbose_name='Торпедо крупно')),
                ('back_seats_view', models.BooleanField(default=True, verbose_name='Вид на панель со второго ряда')),
                ('under_hood', models.BooleanField(default=True, verbose_name='Под капотом')),
                ('additional', models.BooleanField(default=True, verbose_name='Дополнительные фотографии')),
            ],
            options={
                'verbose_name': 'Подробная настройка фотографий',
                'verbose_name_plural': 'Подробные настройки фотографий',
            },
        ),
        migrations.CreateModel(
            name='TemplatePlace',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_enable', models.BooleanField(default=True, verbose_name='Вкл/Выкл')),
            ],
            options={
                'verbose_name': 'Настройка места осмотра',
                'verbose_name_plural': 'Настройки места осмотра',
            },
        ),
        migrations.CreateModel(
            name='TemplateSignatures',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_enable', models.BooleanField(default=True, verbose_name='Вкл/Выкл')),
            ],
            options={
                'verbose_name': 'Настройка подписей',
                'verbose_name_plural': 'Настройки подписей',
            },
        ),
        migrations.CreateModel(
            name='TemplateTechnical',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_enable', models.BooleanField(default=True, verbose_name='Вкл/Выкл')),
            ],
            options={
                'verbose_name': 'Настройка технического состояния',
                'verbose_name_plural': 'Настройки технического состояния',
            },
        ),
        migrations.CreateModel(
            name='TemplateTiresDetail',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('additional', models.BooleanField(default=True, verbose_name='Дополнительный комплект')),
            ],
            options={
                'verbose_name': 'Подробная настройка шин',
                'verbose_name_plural': 'Подробные настройки шин',
            },
        ),
        migrations.CreateModel(
            name='TemplateVideo',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_enable', models.BooleanField(default=True, verbose_name='Вкл/Выкл')),
            ],
            options={
                'verbose_name': 'Настройка видео',
                'verbose_name_plural': 'Настройки видео',
            },
        ),
        migrations.RemoveField(
            model_name='template',
            name='structure',
        ),
        migrations.AddField(
            model_name='template',
            name='is_main',
            field=models.BooleanField(default=False, verbose_name='Основной шаблон'),
        ),
        migrations.CreateModel(
            name='TemplateTires',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_enable', models.BooleanField(default=True, verbose_name='Вкл/Выкл')),
                ('detail', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='template_tires', to='template.TemplateTiresDetail', verbose_name='Подробная настройка шин')),
            ],
            options={
                'verbose_name': 'Настройка шин',
                'verbose_name_plural': 'Настройки шин',
            },
        ),
        migrations.CreateModel(
            name='TemplatePhotos',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_enable', models.BooleanField(default=True, verbose_name='Вкл/Выкл')),
                ('detail', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='template_photos', to='template.TemplatePhotosDetail', verbose_name='Подробная настройка фотографий')),
            ],
            options={
                'verbose_name': 'Настройка фотографий',
                'verbose_name_plural': 'Настройки фотографий',
            },
        ),
        migrations.CreateModel(
            name='TemplateEquipment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_enable', models.BooleanField(default=True, verbose_name='Вкл/Выкл')),
                ('detail', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='template_equipment', to='template.TemplateEquipmentDetail', verbose_name='Подробная настройка комплектации')),
            ],
            options={
                'verbose_name': 'Настройка комплектации',
                'verbose_name_plural': 'Настройки комплектаций',
            },
        ),
        migrations.CreateModel(
            name='TemplateDocuments',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_enable', models.BooleanField(default=True, verbose_name='Вкл/Выкл')),
                ('detail', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='template_documents', to='template.TemplateDocumentsDetail', verbose_name='Подробная настройка документов')),
            ],
            options={
                'verbose_name': 'Настройка документов',
                'verbose_name_plural': 'Настройки документов',
            },
        ),
        migrations.AddField(
            model_name='template',
            name='client',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='template', to='template.TemplateClient', verbose_name='Данные клиента'),
        ),
        migrations.AddField(
            model_name='template',
            name='completeness',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='template', to='template.TemplateCompleteness', verbose_name='Комплектность'),
        ),
        migrations.AddField(
            model_name='template',
            name='damage',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='template', to='template.TemplateDamage', verbose_name='Повреждения'),
        ),
        migrations.AddField(
            model_name='template',
            name='documents',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='template', to='template.TemplateDocuments', verbose_name='Документы'),
        ),
        migrations.AddField(
            model_name='template',
            name='equipment',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='template', to='template.TemplateEquipment', verbose_name='Комплектация'),
        ),
        migrations.AddField(
            model_name='template',
            name='lift',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='template', to='template.TemplateLift', verbose_name='Осмотр на подъемнике'),
        ),
        migrations.AddField(
            model_name='template',
            name='paintwork',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='template', to='template.TemplatePaintwork', verbose_name='ЛКП'),
        ),
        migrations.AddField(
            model_name='template',
            name='photos',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='template', to='template.TemplatePhotos', verbose_name='Фотографии'),
        ),
        migrations.AddField(
            model_name='template',
            name='place',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='template', to='template.TemplatePlace', verbose_name='Место осмотра'),
        ),
        migrations.AddField(
            model_name='template',
            name='signatures',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='template', to='template.TemplateSignatures', verbose_name='Подписи'),
        ),
        migrations.AddField(
            model_name='template',
            name='technical',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='template', to='template.TemplateTechnical', verbose_name='Техническое состояние'),
        ),
        migrations.AddField(
            model_name='template',
            name='tires',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='template', to='template.TemplateTires', verbose_name='Шины'),
        ),
        migrations.AddField(
            model_name='template',
            name='video',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='template', to='template.TemplateVideo', verbose_name='Видео'),
        ),
    ]
