# Generated by Django 3.0.2 on 2023-02-08 08:31

from django.db import migrations, models
import django.db.models.deletion
import django_lifecycle.mixins
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('inspection', '0002_auto_20230208_1122'),
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('outer_id', models.IntegerField(blank=True, null=True, verbose_name='Внешний ID')),
                ('title', models.CharField(max_length=100, verbose_name='Название марки')),
            ],
            options={
                'verbose_name': 'Марка транспорного средства',
                'verbose_name_plural': 'Марки транспортных средств',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('outer_id', models.IntegerField(blank=True, null=True, verbose_name='Внешний ID')),
                ('title', models.CharField(max_length=40, verbose_name='Название категории')),
            ],
            options={
                'verbose_name': 'Тип ТС',
                'verbose_name_plural': 'Типы ТС',
            },
        ),
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('title', models.CharField(default='', max_length=40, verbose_name='Название цвета')),
                ('hex_code', models.CharField(blank=True, default='', max_length=7, null=True, verbose_name='HEX цвета')),
            ],
            options={
                'verbose_name': 'Цвет авто',
                'verbose_name_plural': 'Цвета авто',
            },
        ),
        migrations.CreateModel(
            name='Generation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('outer_id', models.IntegerField(blank=True, null=True, verbose_name='Внешний ID')),
                ('title', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='Название поколения')),
                ('year_start', models.PositiveIntegerField(blank=True, null=True, verbose_name='Год начала поколения')),
                ('year_end', models.PositiveIntegerField(blank=True, null=True, verbose_name='Год окончания поколения')),
                ('brand', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='generations', to='car.Brand', verbose_name='Марка')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='generations', to='car.Category', verbose_name='Тип ТС')),
            ],
            options={
                'verbose_name': 'Поколение транспорного средства',
                'verbose_name_plural': 'Поколения транспортных средств',
            },
        ),
        migrations.CreateModel(
            name='Model',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('outer_id', models.IntegerField(blank=True, null=True, verbose_name='Внешний ID')),
                ('title', models.CharField(max_length=100, verbose_name='Название модели')),
                ('year_start', models.PositiveIntegerField(blank=True, null=True, verbose_name='Год начала')),
                ('year_end', models.PositiveIntegerField(blank=True, null=True, verbose_name='Год окончания')),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='models', to='car.Brand', verbose_name='Марка')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='models', to='car.Category', verbose_name='Тип ТС')),
            ],
            options={
                'verbose_name': 'Модель транспорного средства',
                'verbose_name_plural': 'Модели транспортных средств',
            },
        ),
        migrations.CreateModel(
            name='Modification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('outer_id', models.IntegerField(blank=True, null=True, verbose_name='Внешний ID')),
                ('title', models.CharField(blank=True, default='', max_length=100, verbose_name='Название модификации')),
                ('year_start', models.PositiveIntegerField(blank=True, null=True, verbose_name='Год начала')),
                ('year_end', models.PositiveIntegerField(blank=True, null=True, verbose_name='Год окончания')),
                ('body_type', models.CharField(blank=True, choices=[('coupe', 'Купе'), ('roadster', 'Родстер'), ('sedan', 'Седан'), ('hatchback', 'Хэтчбек'), ('suv', 'Внедорожник'), ('universal', 'Универсал'), ('cabriolet', 'Кабриолет'), ('liftback', 'Лифтбек'), ('pickup', 'Пикап'), ('compactvan', 'Компактвэн'), ('speedster', 'Спидстер'), ('fastback', 'Фастбэк'), ('targa', 'Тарга'), ('minivan', 'Минивэн'), ('microvan', 'Микровэн'), ('long', 'Лимузин'), ('van', 'Фургон'), ('phaeton', 'Фаэтон'), ('fullmetal_van', 'Цельнометаллический фургон'), ('ambulance', 'Микроавтобус'), ('minibus', 'Микроавтобус'), ('refrigerator', 'Рефрижератор'), ('flatbed_truck', 'Бортовой'), ('cargo_van', 'Фургон'), ('tent_truck', 'Тентованный фургон'), ('chassis', 'Шасси'), ('isothermal', 'Изотермический фургон'), ('evacuator', 'Эвакуатор'), ('tipper', 'Самосвал'), ('cistern', 'Автоцистерна')], max_length=13, null=True, verbose_name='Тип кузова')),
                ('gearbox_type', models.CharField(blank=True, choices=[('manual', 'Механическая'), ('automatic', 'Автоматическая'), ('variator', 'Вариатор'), ('robotized', 'Робот')], max_length=9, null=True, verbose_name='Тип коробки передач')),
                ('drive_type', models.CharField(blank=True, choices=[('rear', 'Задний'), ('front', 'Передний'), ('full_4wd', 'Полный'), ('optional_4wd', 'Полный')], max_length=12, null=True, verbose_name='Тип привода')),
                ('engine_type', models.CharField(blank=True, choices=[('petrol', 'Бензин'), ('hybrid', 'Гибрид'), ('diesel', 'Дизель'), ('petrol_and_gas', 'Газобаллонное оборудование'), ('electric', 'Электро')], max_length=14, null=True, verbose_name='Тип двигателя')),
                ('engine_volume', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Объем двигателя, см³')),
                ('engine_power', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Мощность двигателя, л/с')),
                ('brand', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='modifications', to='car.Brand', verbose_name='Марка')),
                ('generation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='modifications', to='car.Generation', verbose_name='Поколение')),
                ('model', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='modifications', to='car.Model', verbose_name='Модель')),
            ],
            options={
                'verbose_name': 'Модификация транспортного средства',
                'verbose_name_plural': 'Модификации транспортных средств',
            },
        ),
        migrations.AddField(
            model_name='generation',
            name='model',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='generations', to='car.Model', verbose_name='Модель'),
        ),
        migrations.CreateModel(
            name='Car',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('vin_code', models.CharField(max_length=17, verbose_name='VIN-код')),
                ('unstandart_vin', models.BooleanField(default=False, verbose_name='Нестандартный VIN')),
                ('gov_number', models.CharField(blank=True, max_length=10, null=True, verbose_name='Гос.номер')),
                ('body_type', models.CharField(blank=True, choices=[('coupe', 'Купе'), ('roadster', 'Родстер'), ('sedan', 'Седан'), ('hatchback', 'Хэтчбек'), ('suv', 'Внедорожник'), ('universal', 'Универсал'), ('cabriolet', 'Кабриолет'), ('liftback', 'Лифтбек'), ('pickup', 'Пикап'), ('compactvan', 'Компактвэн'), ('speedster', 'Спидстер'), ('fastback', 'Фастбэк'), ('targa', 'Тарга'), ('minivan', 'Минивэн'), ('microvan', 'Микровэн'), ('long', 'Лимузин'), ('van', 'Фургон'), ('phaeton', 'Фаэтон'), ('fullmetal_van', 'Цельнометаллический фургон'), ('ambulance', 'Микроавтобус'), ('minibus', 'Микроавтобус'), ('refrigerator', 'Рефрижератор'), ('flatbed_truck', 'Бортовой'), ('cargo_van', 'Фургон'), ('tent_truck', 'Тентованный фургон'), ('chassis', 'Шасси'), ('isothermal', 'Изотермический фургон'), ('evacuator', 'Эвакуатор'), ('tipper', 'Самосвал'), ('cistern', 'Автоцистерна')], max_length=13, null=True, verbose_name='Тип кузова')),
                ('gearbox_type', models.CharField(blank=True, choices=[('manual', 'Механическая'), ('automatic', 'Автоматическая'), ('variator', 'Вариатор'), ('robotized', 'Робот')], max_length=9, null=True, verbose_name='Тип коробки передач')),
                ('drive_type', models.CharField(blank=True, choices=[('rear', 'Задний'), ('front', 'Передний'), ('full_4wd', 'Полный'), ('optional_4wd', 'Полный')], max_length=12, null=True, verbose_name='Тип привода')),
                ('engine_type', models.CharField(blank=True, choices=[('petrol', 'Бензин'), ('hybrid', 'Гибрид'), ('diesel', 'Дизель'), ('petrol_and_gas', 'Газобаллонное оборудование'), ('electric', 'Электро')], max_length=14, null=True, verbose_name='Тип двигателя')),
                ('mileage', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Пробег')),
                ('mileage_unknown', models.BooleanField(default=False, verbose_name='Пробег не установлен')),
                ('engine_volume', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Объем двигателя, см³')),
                ('engine_power', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Мощность двигателя, л.с.')),
                ('production_year', models.PositiveIntegerField(blank=True, default=0, verbose_name='Год выпуска')),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='cars', to='car.Brand', verbose_name='Марка')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='cars', to='car.Category', verbose_name='Тип ТС')),
                ('color', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='cars', to='car.Color', verbose_name='Цвет')),
                ('generation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='cars', to='car.Generation', verbose_name='Поколение')),
                ('inspection', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='cars', to='inspection.Inspection', verbose_name='Осмотр')),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='cars', to='car.Model', verbose_name='Модель')),
                ('modification', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='cars', to='car.Modification', verbose_name='Модификация')),
            ],
            options={
                'verbose_name': 'Автомобиль',
                'verbose_name_plural': 'Автомобили',
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
    ]
