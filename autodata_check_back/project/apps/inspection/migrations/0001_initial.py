# Generated by Django 3.0.2 on 2023-02-08 08:22

import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import django_lifecycle.mixins
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('address', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AnotherDocument',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('answer', django.contrib.postgres.fields.jsonb.JSONField(default=dict, verbose_name='Ответ на экран')),
            ],
            options={
                'verbose_name': 'Другие документы',
                'verbose_name_plural': 'Другие документы',
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('answer', django.contrib.postgres.fields.jsonb.JSONField(default=dict, verbose_name='Ответ на экран')),
            ],
            options={
                'verbose_name': 'Клиент',
                'verbose_name_plural': 'Клиенты',
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Complectation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('answer', django.contrib.postgres.fields.jsonb.JSONField(default=dict, verbose_name='Ответ на экран')),
            ],
            options={
                'verbose_name': 'Комплектация автомобиля',
                'verbose_name_plural': 'Комплектации автомобилей',
            },
        ),
        migrations.CreateModel(
            name='Completeness',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('answer', django.contrib.postgres.fields.jsonb.JSONField(default=dict, verbose_name='Ответ на экран')),
            ],
            options={
                'verbose_name': 'Комплектность авто',
                'verbose_name_plural': 'Комплектность авто',
            },
        ),
        migrations.CreateModel(
            name='DamageCheck',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('answer', django.contrib.postgres.fields.jsonb.JSONField(default=dict, verbose_name='Ответ на экран')),
            ],
            options={
                'verbose_name': 'Проверка повреждений',
                'verbose_name_plural': 'Проверки повреждений',
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
            ],
            options={
                'verbose_name': 'Документ',
                'verbose_name_plural': 'Документы',
            },
        ),
        migrations.CreateModel(
            name='Inspection',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('status', models.CharField(choices=[('complete', 'Завершен'), ('draft', 'Черновик')], default='draft', max_length=8, verbose_name='Статус осмотра')),
                ('address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='inspections', to='address.Address', verbose_name='Адрес')),
            ],
            options={
                'verbose_name': 'Осмотр',
                'verbose_name_plural': 'Осмотры',
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='TypeAnotherDocument',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('title', models.CharField(max_length=200, verbose_name='Название типа документа')),
            ],
            options={
                'verbose_name': 'Тип документа',
                'verbose_name_plural': 'Типы документов',
            },
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('answer', django.contrib.postgres.fields.jsonb.JSONField(default=dict, verbose_name='Ответ на экран')),
                ('inspection', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='videos', to='inspection.Inspection', verbose_name='Осмотр')),
            ],
            options={
                'verbose_name': 'Видео',
                'verbose_name_plural': 'Видео',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Tire',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('answer', django.contrib.postgres.fields.jsonb.JSONField(default=dict, verbose_name='Ответ на экран')),
                ('inspection', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='tires', to='inspection.Inspection', verbose_name='Осмотр')),
            ],
            options={
                'verbose_name': 'Шины',
                'verbose_name_plural': 'Шины',
            },
        ),
        migrations.CreateModel(
            name='TechnicalState',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('answer', django.contrib.postgres.fields.jsonb.JSONField(default=dict, verbose_name='Ответ на экран')),
                ('inspection', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='technical_states', to='inspection.Inspection', verbose_name='Осмотр')),
            ],
            options={
                'verbose_name': 'Техническое состояние',
                'verbose_name_plural': 'Технические состояния',
            },
        ),
        migrations.CreateModel(
            name='STSDocument',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('answer', django.contrib.postgres.fields.jsonb.JSONField(default=dict, verbose_name='Ответ на экран')),
                ('document', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='sts_documents', to='inspection.Document', verbose_name='Документы')),
            ],
            options={
                'verbose_name': 'Документ СТС',
                'verbose_name_plural': 'Документы СТС',
            },
        ),
        migrations.CreateModel(
            name='PTSDocument',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('answer', django.contrib.postgres.fields.jsonb.JSONField(default=dict, verbose_name='Ответ на экран')),
                ('document', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='pts_documents', to='inspection.Document', verbose_name='Документы')),
            ],
            options={
                'verbose_name': 'Документ ПТС',
                'verbose_name_plural': 'Документы ПТС',
            },
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('answer', django.contrib.postgres.fields.jsonb.JSONField(default=dict, verbose_name='Ответ на экран')),
                ('inspection', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='photos', to='inspection.Inspection', verbose_name='Осмотр')),
            ],
            options={
                'verbose_name': 'Фотографии',
                'verbose_name_plural': 'Фотографии',
            },
        ),
        migrations.CreateModel(
            name='Paintwork',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('answer', django.contrib.postgres.fields.jsonb.JSONField(default=dict, verbose_name='Ответ на экран')),
                ('inspection', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='paintworks', to='inspection.Inspection', verbose_name='Осмотр')),
            ],
            options={
                'verbose_name': 'Лакокрасочное покрытие',
                'verbose_name_plural': 'Лакокрасочные покрытия',
            },
        ),
        migrations.CreateModel(
            name='LiftInspection',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('answer', django.contrib.postgres.fields.jsonb.JSONField(default=dict, verbose_name='Ответ на экран')),
                ('inspection', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='lift_inspections', to='inspection.Inspection', verbose_name='Осмотр')),
            ],
            options={
                'verbose_name': 'Осмотр на подъемнике',
                'verbose_name_plural': 'Осмотр на подъемнике',
            },
        ),
    ]
