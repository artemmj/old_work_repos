# Generated by Django 3.0.2 on 2023-05-22 10:39

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_lifecycle.mixins
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('inspection_task', '0007_inspectiontask_type'),
        ('contenttypes', '0002_remove_content_type_name'),
        ('organization', '0009_auto_20230512_1128'),
        ('template', '0011_template_is_accreditation'),
        ('notification', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BaseNotification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('message', models.CharField(max_length=250, verbose_name='Сообщение')),
                ('status', models.CharField(choices=[('viewed', 'Просмотренное'), ('new', 'Новое')], default='new', max_length=6, verbose_name='Статус')),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_notification.basenotification_set+', to='contenttypes.ContentType')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Базовое уведомление',
                'verbose_name_plural': 'Базовые уведомления',
                'ordering': ('-created_at',),
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='InspectorAddBalanceNotification',
            fields=[
                ('basenotification_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='notification.BaseNotification')),
            ],
            options={
                'verbose_name': 'Уведомление о начислении инспектору за завершенное задание',
                'verbose_name_plural': 'Уведомления о начислении инспектору за завершенное задание',
                'ordering': ('-created_at',),
            },
            bases=('notification.basenotification',),
        ),
        migrations.CreateModel(
            name='OrganizationAddBalanceNotification',
            fields=[
                ('basenotification_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='notification.BaseNotification')),
            ],
            options={
                'verbose_name': 'Уведомление о пополнении баланса организации',
                'verbose_name_plural': 'Уведомления о пополнении баланса организации',
                'ordering': ('-created_at',),
            },
            bases=('notification.basenotification',),
        ),
        migrations.CreateModel(
            name='OrganizationInvitationNotification',
            fields=[
                ('basenotification_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='notification.BaseNotification')),
                ('org_invitation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='org_invitation_notifications', to='organization.OrgInvitation', verbose_name='Приглашение на вступление в организацию')),
            ],
            options={
                'verbose_name': 'Уведомление о приглашении вступить в организацию',
                'verbose_name_plural': 'Уведомления о приглашении вступить в организацию',
                'ordering': ('-created_at',),
            },
            bases=('notification.basenotification',),
        ),
        migrations.CreateModel(
            name='TaskAcceptedNotification',
            fields=[
                ('basenotification_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='notification.BaseNotification')),
                ('inspection_task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task_accepted_notifications', to='inspection_task.InspectionTask', verbose_name='Задание на осмотр')),
            ],
            options={
                'verbose_name': 'Уведомление о принятии задания',
                'verbose_name_plural': 'Уведомления о принятии задания',
                'ordering': ('-created_at',),
            },
            bases=('notification.basenotification',),
        ),
        migrations.CreateModel(
            name='TaskCompletedNotification',
            fields=[
                ('basenotification_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='notification.BaseNotification')),
                ('inspection_task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task_completed_notifications', to='inspection_task.InspectionTask', verbose_name='Задание на осмотр')),
            ],
            options={
                'verbose_name': 'Уведомление о завершении задания',
                'verbose_name_plural': 'Уведомления о завершении задания',
                'ordering': ('-created_at',),
            },
            bases=('notification.basenotification',),
        ),
        migrations.CreateModel(
            name='TaskFixNotification',
            fields=[
                ('basenotification_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='notification.BaseNotification')),
                ('inspection_task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task_fix_notifications', to='inspection_task.InspectionTask', verbose_name='Задание на осмотр')),
            ],
            options={
                'verbose_name': 'Уведомление о правках в задании',
                'verbose_name_plural': 'Уведомления о правках в задании',
                'ordering': ('-created_at',),
            },
            bases=('notification.basenotification',),
        ),
        migrations.CreateModel(
            name='TaskInvitationNotification',
            fields=[
                ('basenotification_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='notification.BaseNotification')),
                ('inspection_task_invitation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task_inspector_notifications', to='inspection_task.Invitation', verbose_name='Приглашение по заданию')),
            ],
            options={
                'verbose_name': 'Уведомление о приглашении по заданию',
                'verbose_name_plural': 'Уведомления о приглашениях по заданию',
                'ordering': ('-created_at',),
            },
            bases=('notification.basenotification',),
        ),
        migrations.CreateModel(
            name='TemplateInvitationNotification',
            fields=[
                ('basenotification_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='notification.BaseNotification')),
                ('template_invitation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='template_invitation_notifications', to='template.TemplateInvitation', verbose_name='Приглашение принять шаблон')),
            ],
            options={
                'verbose_name': 'Уведомление о принятии шаблона',
                'verbose_name_plural': 'Уведомления о принятии шаблона',
                'ordering': ('-created_at',),
            },
            bases=('notification.basenotification',),
        ),
        migrations.DeleteModel(
            name='Notification',
        ),
    ]
